services:
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:3-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    restart: always
    env_file:
      - .env.production
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s


  api-gateway:
    image: tushar03dev/connectify-backend:api-gateway
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      auth-service:
        condition: service_healthy
      room-service:
        condition: service_healthy
      video-chat-service-1:
        condition: service_healthy
      video-chat-service-2:
        condition: service_healthy
      video-chat-service-3:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network

  auth-service:
    image: tushar03dev/connectify-backend:auth-service
    ports:
      - "5001:5001"
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  room-service:
    image: tushar03dev/connectify-backend:room-service
    ports:
      - "5002:5002"
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  video-chat-service-1:
    image: tushar03dev/connectify-backend:video-chat-service
    ports:
      - "5003:5003"
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  video-chat-service-2:
    image: tushar03dev/connectify-backend:video-chat-service
    restart: always
    ports:
      - "5004:5003"
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  video-chat-service-3:
    image: tushar03dev/connectify-backend:video-chat-service
    ports:
      - "5005:5003"
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env.production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  mongo_data:

networks:
  app-network:
