name: Build & Deploy Microservices to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Detect Changed Services
        id: changes
        run: |
          CHANGED_SERVICES=""
          for service in api-gateway auth-service room-service video-chat-service; do
            if git diff --quiet HEAD^ HEAD -- backend/$service; then
              echo "$service unchanged"
            else
              CHANGED_SERVICES="$CHANGED_SERVICES $service"
            fi
          done
          echo "services=$CHANGED_SERVICES" >> $GITHUB_OUTPUT

      - name: Build & Push Changed Docker Images
        if: steps.changes.outputs.services != ''
        run: |
          for service in ${{ steps.changes.outputs.services }}; do
            IMAGE_NAME="tushar03dev/connectify-backend:$service"
            docker build --cache-from=$IMAGE_NAME -t $IMAGE_NAME ./backend/$service
            docker push $IMAGE_NAME
          done

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            docker compose pull
            docker compose down
            docker compose up -d
            docker image prune -af   # Cleanup unused images
          EOF